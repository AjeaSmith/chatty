{"version":3,"sources":["hooks/useLocalStorage.js","context/ChatContext.js","pages/LoginPage.js","components/Message.js","components/Messages.js","components/Sidebar.js","helpers/notme.js","helpers/getMessages.js","helpers/renderAlert.js","pages/ChatPage.js","protected/Auth.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","ChatContext","createContext","socket","socketIO","transports","ChatContextProvider","children","currentUser","setCurrentUser","onlineUsers","setOnlineUsers","loggedOutUserName","setloggedOutUserName","authStatus","setauthStatus","selectedUser","setSelectedUser","messages","setMessages","useEffect","on","data","Object","keys","prev","Provider","saveUserToLocalStorage","username","logout","emit","location","sendMessage","LoginPage","history","useForm","mode","register","errors","handleSubmit","useContext","className","onSubmit","formData","name","push","htmlFor","message","ref","required","minLength","id","type","placeholder","Message","from","src","alt","Messages","map","_id","Sidebar","activeLink","setactiveLink","users","filter","handleActiveLink","to","callback","axios","post","headers","then","res","getMessages","index","onClick","RenderAlertMessage","isLoggedOut","setTimeout","role","xmlns","viewBox","d","ChatPage","setMessage","e","preventDefault","onChange","target","ProtectedRoute","Component","component","rest","render","props","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d5b093.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\nexport default useLocalStorage;\n","import { createContext, useEffect, useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport socketIO from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst SOCKET_URL = \"https://chatty-end.herokuapp.com/\";\nexport const ChatContext = createContext();\nexport const socket = socketIO(SOCKET_URL, { transports: [\"websocket\"] });\nconst ChatContextProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useLocalStorage(\"name\", null);\n  const [onlineUsers, setOnlineUsers] = useState(null);\n  const [loggedOutUserName, setloggedOutUserName] = useState(null);\n  const [authStatus, setauthStatus] = useLocalStorage(\"status\", false);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [messages, setMessages] = useState(null);\n  function saveUserToLocalStorage(username) {\n    setCurrentUser(username);\n    setauthStatus(true);\n  }\n  function logout() {\n    setCurrentUser(null);\n    setauthStatus(false);\n    socket.emit(\"logout\", currentUser);\n    window.location = \"/\";\n  }\n  function sendMessage(data) {\n    socket.emit(\"send_message\", data);\n    console.log(data);\n    setMessages((prev) => [...prev, data]);\n  }\n  useEffect(() => {\n    socket.on(\"received_username\", (data) => {\n      setOnlineUsers(Object.keys(data));\n    });\n    socket.on(\"user_logged_out\", (data) => {\n      setloggedOutUserName(data);\n    });\n    socket.on(\"message_received\", (data) => {\n      setMessages((prev) => [...prev, data]);\n      console.log(data);\n    });\n  }, []);\n  return (\n    <ChatContext.Provider\n      value={{\n        currentUser,\n        saveUserToLocalStorage,\n        socket,\n        logout,\n        authStatus,\n        onlineUsers,\n        loggedOutUserName,\n        setloggedOutUserName,\n        setSelectedUser,\n        selectedUser,\n        sendMessage,\n        setMessages,\n        messages,\n      }}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\nexport default ChatContextProvider;\n","import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ChatContext } from \"../context/ChatContext\";\nconst LoginPage = ({ history }) => {\n  const { register, errors, handleSubmit } = useForm({ mode: \"onBlur\" });\n  const { saveUserToLocalStorage, socket } = useContext(ChatContext);\n  const onSubmitForm = (formData) => {\n    socket.emit(\"user_connected\", {\n      name: formData.username,\n    });\n    saveUserToLocalStorage(formData.username);\n    history.push(`/chat/${formData.username}`);\n  };\n  return (\n    <section className=\"h-screen flex justify-center items-center font-mono rounded-md\">\n      <div className=\"flex items-center justify-center flex-col bg-gray-100 w-96 lg:w-auto h-auto p-5 rounded-sm shadow-md\">\n        <h2 className=\"mb-3 text-2xl font-medium uppercase text-black tracking-wider\">\n          Login\n        </h2>\n        <form\n          className=\"flex flex-col w-80 lg:w-96\"\n          onSubmit={handleSubmit(onSubmitForm)}>\n          {errors.username ? (\n            <label\n              htmlFor=\"username\"\n              className=\"text-red-700 mb-1 tracking-wide\">\n              {errors.username.message}\n            </label>\n          ) : (\n            <label htmlFor=\"username\" className=\"text-black mb-1 tracking-wide\">\n              Username\n            </label>\n          )}\n          <input\n            ref={register({\n              required: {\n                value: true,\n                message: \"Please enter username\",\n              },\n              minLength: {\n                value: 3,\n                message: \"Please enter at least 5 characters\",\n              },\n            })}\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"e.g., John Doe\"\n            className=\"p-2 mb-6 rounded-sm shadow border border-transparent focus:outline-none\"\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-gray-900 text-white p-2 rounded-sm hover:bg-gray-700\">\n            Log In\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginPage;\n","import React, { useContext } from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nconst Message = ({ message, key }) => {\n  const { currentUser } = useContext(ChatContext);\n  return (\n    <>\n      {message.from === currentUser ? (\n        <div className=\"messageContainer justifyEnd mb-3\" key={key}>\n          <div className=\"messageBox backgroundBlue\">\n            <p className=\"messageText text-white\">{message.message}</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"messageContainer justifyStart mt-3 mb-3\">\n          <p className=\"sentText pr-3\">\n            <img\n              src=\"https://picsum.photos/30\"\n              alt=\"user icon\"\n              className=\"rounded-full\"\n            />\n          </p>\n          <div className=\"messageBox backgroundLight\">\n            <p className=\"messageText colorDark\">{message.message}</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Message;\n","import React, { useContext } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Message from \"./Message\";\nimport { ChatContext } from \"../context/ChatContext\";\nconst Messages = () => {\n  const { messages } = useContext(ChatContext);\n  return (\n    <ScrollToBottom className=\"overflow-auto flex-auto py-5%\">\n      {!messages ? (\n        <p>No messages to show</p>\n      ) : (\n        messages.map((message) => {\n          return <Message message={message} key={message._id} />;\n        })\n      )}\n    </ScrollToBottom>\n  );\n};\n\nexport default Messages;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { getMessages } from \"../helpers/getMessages\";\nimport { notMe } from \"../helpers/notme\";\nimport \"../style.css\";\nconst Sidebar = () => {\n  const [activeLink, setactiveLink] = useState(null);\n  const {\n    currentUser,\n    logout,\n    onlineUsers,\n    setSelectedUser,\n    setMessages,\n  } = useContext(ChatContext);\n  const users = notMe(onlineUsers, currentUser);\n  const handleActiveLink = (to) => {\n    setactiveLink(to);\n    setSelectedUser(to);\n    getMessages(currentUser, to, setMessages);\n  };\n  return (\n    <section className=\"sidebar text-black flex flex-col justify-around h-auto w-60\">\n      <div className=\"user flex flex-col items-center p-3 text-gray-600\">\n        <img\n          src=\"https://picsum.photos/50\"\n          alt=\"random pic\"\n          className=\"rounded-full mb-1\"\n        />\n        <p>{currentUser}</p>\n        <span className=\"flex items-center\">\n          <div className=\"w-3 h-3 bg-green-500 mr-1 rounded-full\"></div>\n          <small>Active</small>\n        </span>\n      </div>\n      <ul className=\"messages overflow-y-scroll h-60 flex-1 p-0 m-0\">\n        {!users ? (\n          <p className=\"text-center mt-4\">No users</p>\n        ) : (\n          users.map((item, index) => {\n            return (\n              <li\n                key={index}\n                className={`message p-3 text-center ${\n                  activeLink === item ? \"active\" : \"\"\n                }`}\n                onClick={() => handleActiveLink(item)}>\n                <a>{item}</a>\n              </li>\n            );\n          })\n        )}\n      </ul>\n      <Link\n        to=\"/login\"\n        onClick={logout}\n        className=\"w-auto bg-gray-800 p-2 text-white text-center font-medium\">\n        Log out\n      </Link>\n    </section>\n  );\n};\n\nexport default Sidebar;\n","export const notMe = (data, username) => {\n  const notMeUsers = data\n    ? data.filter((item) => item !== username)\n    : null;\n  return notMeUsers;\n};\n","import axios from \"axios\";\nexport const getMessages = (from, to, callback) => {\n  axios\n    .post(\n      \"https://chatty-end.herokuapp.com/get_messages\",\n      {\n        from: from,\n        to: to,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    .then((res) => {\n      console.log(\"the message data\", res.data);\n      callback(res.data);\n      //   setMessages(res.data);\n    });\n};\n","export const RenderAlertMessage = (currentUser, isLoggedOut, callback) => {\n  setTimeout(() => {\n    callback(null);\n  }, 3000);\n  return (\n    <>\n      {isLoggedOut ? (\n        <div\n          className=\"bg-teal flex items-center text-white text-sm font-bold px-4 py-3 border-2 border-white rounded-md mb-4 bg-gray-800\"\n          role=\"alert\">\n          <svg\n            className=\"fill-current w-4 h-4 mr-2\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\">\n            <path d=\"M12.432 0c1.34 0 2.01.912 2.01 1.957 0 1.305-1.164 2.512-2.679 2.512-1.269 0-2.009-.75-1.974-1.99C9.789 1.436 10.67 0 12.432 0zM8.309 20c-1.058 0-1.833-.652-1.093-3.524l1.214-5.092c.211-.814.246-1.141 0-1.141-.317 0-1.689.562-2.502 1.117l-.528-.88c2.572-2.186 5.531-3.467 6.801-3.467 1.057 0 1.233 1.273.705 3.23l-1.391 5.352c-.246.945-.141 1.271.106 1.271.317 0 1.357-.392 2.379-1.207l.6.814C12.098 19.02 9.365 20 8.309 20z\" />\n          </svg>\n          <p>{currentUser} just logged out</p>\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import React, { useContext, Fragment, useState } from \"react\";\nimport Messages from \"../components/Messages\";\nimport Sidebar from \"../components/Sidebar\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { RenderAlertMessage } from \"../helpers/renderAlert\";\nimport \"../style.css\";\nconst ChatPage = () => {\n  const {\n    loggedOutUserName,\n    setloggedOutUserName,\n    currentUser,\n    sendMessage,\n    selectedUser,\n  } = useContext(ChatContext);\n  const [message, setMessage] = useState(\"\");\n  function handleSendMessage(e) {\n    e.preventDefault();\n    const data = {\n      from: currentUser,\n      to: selectedUser,\n      message: message,\n    };\n    sendMessage(data);\n    setMessage(\"\");\n  }\n  return (\n    <section className=\"flex flex-col items-center\">\n      {RenderAlertMessage(currentUser, loggedOutUserName, setloggedOutUserName)}\n      <section className=\"flex justify-center chat-wrapper rounded-md\">\n        <Sidebar />\n        <div className=\"p-3 h-auto bg-white flex justify-between flex-col chat-message\">\n          <Messages />\n          <section>\n            <form className=\"flex\" onSubmit={handleSendMessage}>\n              <input\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                type=\"text\"\n                name=\"message\"\n                placeholder=\"Enter Message\"\n                className=\"message-input mr-2 flex-1 px-4 py-2 outline-none\"\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </section>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default ChatPage;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { ChatContext } from \"../context/ChatContext\";\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n  const { authStatus } = useContext(ChatContext);\n  console.log(authStatus);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (authStatus) {\n          return <Component {...props} {...rest} />;\n        } else {\n          return <Redirect to=\"/\" />;\n        }\n      }}\n    />\n  );\n};\nexport default ProtectedRoute;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ChatPage from \"./pages/ChatPage\";\nimport \"./style.css\";\nimport ChatContextProvider from \"./context/ChatContext\";\nimport ProtectedRoute from \"./protected/Auth\";\n\nfunction App() {\n  return (\n    <main className=\"main h-screen flex justify-center items-center\">\n      <Router>\n        <Switch>\n          <ChatContextProvider>\n            <Route exact path=\"/\" component={LoginPage} />\n            <ProtectedRoute path=\"/chat/:username\" component={ChatPage} />\n          </ChatContextProvider>\n        </Switch>\n      </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}